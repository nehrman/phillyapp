# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test
  test:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          VAULT_ADDR: http://82.64.24.225:8200
    steps:
      - checkout
      - run:
          name: Download Vault binary
          command: curl -o vault.zip https://releases.hashicorp.com/vault/1.1.1/vault_1.1.1_linux_amd64.zip
      - run:
          name: Unzip Vault binary
          command: unzip ./vault.zip
      - run:
          name: Login to Vault and register token 
          command: |
              export PROJECT=$CIRCLE_PROJECT_REPONAME
              export VCS_REV=$CIRCLE_SHA1
              export BUILD=$CIRCLE_BUILD_NUM
              #export VAULT_TOKEN="$(./vault write auth/circleci-auth-plugin/login project=${PROJECT} vcs_revision=${VCS_REV} build_num=${BUILD})"
              export VAULT_TOKEN="$(curl -v --data '{"project": "'"$PROJECT"'", "vcs_revision": "'"$VCS_REV"'", "build_num": "'"$BUILD"'"}' "${VAULT_ADDR}/v1/auth/circleci-auth-plugin/login" | jq -r '.auth.client_token')"
      - run:
          name: Show the token
          command: echo $VAULT_TOKEN
      - run:
          name: Read the secret from Vault
          command: curl -H "X-Auth-Token: ${VAULT_TOKEN}" "${VAULT_ADDR}/v1/kv/circleci"
              

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master

